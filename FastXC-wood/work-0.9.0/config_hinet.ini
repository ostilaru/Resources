; The SeisArray_1 contains the path, pattern, time , component, and station list path for the first SeisArray
[SeisArray_1]
; The path of the SeisArray
sac_dir = /home/woodwood/hpc/station_2/AAKH
; The pattern of the SeisArray
pattern = {home}/{*}/{station}.{YYYY}.{JJJ}.{*}.{component}.{suffix}
; The start time of the SeisArray
start = 2018-01-01 00:00:00
end = 2018-12-31 00:00:00
; The path to your station_list. If you do not have a station_list, set sta_list_path to NONE (capitalize)
sta_list = NONE
; The component_list of the SeisArray, !! Should be in the order of E,N,Z !!
component_list = U


; The SeisArray_2, If single array is used, set sac_dir to NONE (capitalize)
[SeisArray_2]
; The path of the SeisArray
sac_dir = /home/woodwood/hpc/station_2/ABNH
; The pattern of the SeisArray
pattern = {home}/{*}/{station}.{YYYY}.{JJJ}.{*}.{component}.{suffix}
; The time period of the SeisArray, strongly recommend the time period of the Array_2 is the same as the Array_1
start = 2018-01-01 00:00:00
end = 2018-12-31 00:00:00
; The path to your station_list, If you do not have a station_list, set sta_list_path to NONE (capitalize)
sta_list = NONE
; The component_list of the SeisArray, !! Should be in the order of E,N,Z !!
component_list = U

; Parameters for doing the cross-correlation
[Parameters]
; output directory of the cross-correlation
output_dir = /home/woodwood/hpc/station_2/ncf_hinet_AAKH_ABNH
win_len = 7200
; The whiten type of the cross-correlation, BEFORE, AFTER, BOTH or OFF, AFTER is recommended
whiten = AFTER
; The normalization type of the cross-correlation, RUN-ABS, ONE-BIT or OFF
normalize = RUN-ABS
; The bands of whiten and normalization, format is 0.2/0.5 0.5/2 2/4 (Hz)
bands = 0.05/0.1 0.1/0.2 0.2/0.5 0.5/1 1/2
; The maximum time lag of the cross-correlation (seconds)
max_lag = 500
; whether do cross-correlation or only auto-correlation, True or False, Only work for one array condition
do_xc = True
; If skip some steps of segment in continuous wave, usually do not set (Just Leave it -1)
skip_step = 4/-1
; stacking normalization
stack_norm = True

; Path for command line tools
[Command]
sac2spec_c1 = /home/woodwood/hpc/Resources/FastXC-wood/xc-0.9.0/bin/sac2spec_c1
sac2spec_c9 = /home/woodwood/hpc/Resources/FastXC-wood/xc-0.9.0/bin/sac2spec_c9
xc_mono = /home/woodwood/hpc/Resources/FastXC-wood/xc-0.9.0/bin/spec_xc_mono
xc_dual = /home/woodwood/hpc/Resources/FastXC-wood/xc-0.9.0/bin/spec_xc_dual
stack = /home/woodwood/hpc/Resources/FastXC-wood/xc-0.9.0/bin/ncfstack
rotate = /home/woodwood/hpc/Resources/FastXC-wood/xc-0.9.0/bin/RotateNCF


; Information of memory
[mem_info]
; number of points in one sac file
npts = 864000
; delta of sac file (seconds)
delta = 0.1
; length of length of segment file (seconds)
seg_len = 7200
; gpu list which will be used in computing
gpu_list = 0
; tasks deploy on each gpu for the cross-correlation step
gpu_task_num = 1
; gpu mem info : used to allocate tasks in the sac2spec step (only the ratio message is used )
; and to calculate the max num of spectrum in step 2
; Using nvidia-smi to find such information
gpu_mem_info = 6
; cpu mem info use free -h to get the information
cpu_mem_info = 16
; redundant ratio of the memory
redundant_ratio = 0.8

; executing params
[executing]
do_xc = True
parallel = True
debug = False
threads = 12
log_file_path = /home/woodwood/hpc/station_2/log_file.txt
